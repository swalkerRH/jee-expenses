package com.expenses.model;

// Generated Jan 8, 2014 3:15:29 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * ExpenseCategory generated by hbm2java
 */
@Entity
@Table(name = "expense_category", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class ExpenseCategory implements java.io.Serializable {

	private int id;
	private ExpenseUser expenseUser;
	private String name;
	private String description;
	private Set<Expense> expenses = new HashSet<Expense>(0);

	public ExpenseCategory() {
	}

	public ExpenseCategory(int id, ExpenseUser expenseUser, String name,
			String description) {
		this.id = id;
		this.expenseUser = expenseUser;
		this.name = name;
		this.description = description;
	}

	public ExpenseCategory(int id, ExpenseUser expenseUser, String name,
			String description, Set<Expense> expenses) {
		this.id = id;
		this.expenseUser = expenseUser;
		this.name = name;
		this.description = description;
		this.expenses = expenses;
	}

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_id", nullable = false)
	public ExpenseUser getExpenseUser() {
		return this.expenseUser;
	}

	public void setExpenseUser(ExpenseUser expenseUser) {
		this.expenseUser = expenseUser;
	}

	@Column(name = "name", unique = true, nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "expenseCategory")
	public Set<Expense> getExpenses() {
		return this.expenses;
	}

	public void setExpenses(Set<Expense> expenses) {
		this.expenses = expenses;
	}

}
